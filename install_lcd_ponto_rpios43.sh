#!/bin/bash
set -e

echo "üöÄ Iniciando instala√ß√£o / reconfigura√ß√£o do ponto.py com LCD touchscreen (Raspberry Pi 4, kernel 6.0)..."
echo "‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ"

# -------------------------------------------------------------------
# üîß Atualiza√ß√£o e pacotes base
# -------------------------------------------------------------------
sudo apt update -y && sudo apt upgrade -y
sudo apt install -y sqlite3 unclutter git cmake python3 python3-pip python3-tk python3-rpi.gpio fbset fbi

# -------------------------------------------------------------------
# üìÑ Caminhos padr√£o
# -------------------------------------------------------------------
BOOTCFG="/boot/firmware/config.txt"
[ -f "$BOOTCFG" ] || BOOTCFG="/boot/config.txt"
APP_PATH="/home/pi/raspi/ponto.py"
SERVICE_PATH="/etc/systemd/system/ponto.service"

# -------------------------------------------------------------------
# ü©∫ Detectar se j√° existe configura√ß√£o anterior
# -------------------------------------------------------------------
if [ -f "$SERVICE_PATH" ]; then
  echo "‚öôÔ∏è Detec√ß√£o: o servi√ßo ponto.service j√° existe."
  echo "Escolha a a√ß√£o desejada:"
  echo "1) Reconfigurar display e reinstalar servi√ßo"
  echo "2) Apenas reiniciar servi√ßo ponto"
  echo "3) Cancelar"
  read -p "üëâ Escolha [1-3]: " opt
  case $opt in
    1) echo "üîß Reconfigurando...";;
    2) sudo systemctl restart ponto.service && echo "‚úÖ Servi√ßo reiniciado." && exit 0;;
    3) echo "üö™ Saindo sem altera√ß√µes." && exit 0;;
  esac
fi

# -------------------------------------------------------------------
# üíæ Backup para rollback
# -------------------------------------------------------------------
BACKUP="${BOOTCFG}.bak.$(date +%Y%m%d%H%M)"
sudo cp "$BOOTCFG" "$BACKUP"
echo "üíæ Backup criado: $BACKUP"

# -------------------------------------------------------------------
# üì∫ Detectar display SPI automaticamente
# -------------------------------------------------------------------
echo ""
echo "üì∫ Detectando LCD touchscreen..."
DETECTED="none"

if dmesg | grep -qi "waveshare"; then
  DETECTED="waveshare"
elif dmesg | grep -qi "mhs35"; then
  DETECTED="mhs35"
elif dmesg | grep -qi "goodtft"; then
  DETECTED="goodtft"
elif dmesg | grep -qi "ili9486"; then
  DETECTED="ili9486"
fi

# -------------------------------------------------------------------
# üñêÔ∏è Sele√ß√£o manual (caso n√£o detectado)
# -------------------------------------------------------------------
if [ "$DETECTED" = "none" ]; then
  echo ""
  echo "‚ö†Ô∏è Nenhum LCD detectado automaticamente."
  echo "Selecione o modelo:"
  echo "1) Waveshare 3.5\""
  echo "2) MHS 3.5\""
  echo "3) GoodTFT 3.5\""
  echo "4) ILI9486 Gen√©rico"
  echo "5) Outro SPI (overlay padr√£o)"
  read -p "üëâ Escolha [1-5]: " opt
  case $opt in
    1) DETECTED="waveshare" ;;
    2) DETECTED="mhs35" ;;
    3) DETECTED="goodtft" ;;
    4) DETECTED="ili9486" ;;
    5|*) DETECTED="default" ;;
  esac
fi

# -------------------------------------------------------------------
# ‚öôÔ∏è Aplicar overlay correspondente (modo KMS moderno)
# -------------------------------------------------------------------
echo ""
echo "üìÑ Aplicando configura√ß√£o para display: $DETECTED"
OVERLAY="vc4-kms-dpi-default"

case $DETECTED in
  waveshare) OVERLAY="vc4-kms-dpi-waveshare35a" ;;
  mhs35) OVERLAY="vc4-kms-dpi-mhs35" ;;
  goodtft) OVERLAY="vc4-kms-dpi-ili9486" ;;  # GoodTFT usa ILI9486
  ili9486) OVERLAY="vc4-kms-dpi-ili9486" ;;
esac

sudo sed -i '/^dtoverlay=/d' "$BOOTCFG"
sudo tee -a "$BOOTCFG" > /dev/null <<EOF

# --- LCD SPI configurado automaticamente (kernel 6.0) ---
dtoverlay=${OVERLAY},rotate=90,speed=48000000
max_framebuffers=2
framebuffer_width=480
framebuffer_height=320
EOF

echo "‚úÖ Overlay aplicado: $OVERLAY"

# -------------------------------------------------------------------
# üß™ Teste de framebuffer e rollback se falhar
# -------------------------------------------------------------------
echo ""
echo "üîé Testando framebuffer..."
if ! fbset -s >/dev/null 2>&1; then
  echo "‚ùå Framebuffer n√£o detectado! Restaurando backup..."
  sudo cp "$BACKUP" "$BOOTCFG"
  echo "üîÑ Configura√ß√£o revertida."
  exit 1
else
  echo "‚úÖ Framebuffer ativo."
fi

# -------------------------------------------------------------------
# ‚öôÔ∏è Criar servi√ßo systemd para ponto.py (com sudo)
# -------------------------------------------------------------------
echo ""
echo "‚öôÔ∏è Criando servi√ßo systemd para ponto.py..."
cat <<EOF | sudo tee "$SERVICE_PATH" > /dev/null
[Unit]
Description=Aplica√ß√£o ponto.py autom√°tica (sudo + LCD)
After=graphical.target

[Service]
Type=simple
User=root
ExecStart=/usr/bin/python3 $APP_PATH
WorkingDirectory=/home/pi/raspi
Environment=DISPLAY=:0
Environment=XAUTHORITY=/home/pi/.Xauthority
Restart=always
RestartSec=5

[Install]
WantedBy=graphical.target
EOF

sudo chmod 644 "$SERVICE_PATH"
sudo systemctl daemon-reload
sudo systemctl enable ponto.service

echo "‚úÖ Servi√ßo ponto.service criado e habilitado."

# -------------------------------------------------------------------
# üñ±Ô∏è Ocultar cursor
# -------------------------------------------------------------------
cat <<EOF | sudo tee /etc/systemd/system/unclutter.service > /dev/null
[Unit]
Description=Ocultar cursor do mouse
After=graphical.target

[Service]
ExecStart=/usr/bin/unclutter -idle 0.1 -root
Restart=always
User=pi

[Install]
WantedBy=graphical.target
EOF

sudo systemctl enable unclutter.service

# -------------------------------------------------------------------
# üîê Ajustar sudoers (para permitir execu√ß√£o direta)
# -------------------------------------------------------------------
sudo bash -c 'echo "pi ALL=(ALL) NOPASSWD: /usr/bin/python3" > /etc/sudoers.d/010_pi-nopasswd-python'
sudo chmod 440 /etc/sudoers.d/010_pi-nopasswd-python

# -------------------------------------------------------------------
# üßπ Limpeza final
# -------------------------------------------------------------------
sudo apt autoremove -y && sudo apt clean
echo ""
echo "‚úÖ Instala√ß√£o conclu√≠da com sucesso!"
echo "üì∫ Display configurado: $OVERLAY"
echo "üíæ Backup salvo em: $BACKUP"
echo "‚öôÔ∏è Servi√ßo criado: $SERVICE_PATH"
echo "üîÅ Reinicie o sistema para aplicar (sudo reboot)"
